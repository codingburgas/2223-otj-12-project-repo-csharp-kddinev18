<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@using System.Text.Json;
@model DeviceDataModel
@{
    ViewData["Title"] = "DeviceData";
}
<form asp-asp-controller="Dashboard" asp-action="SetChartArguments">
    <div class="d-flex justify-content-between align-items-center form-group">
        <div class="p-2 bd-highlight">
            <label>Choose a chart type:</label>
            <select id="ChartType" name="ChartType">
                <option value="none">None</option>
                <option value="table">Table</option>
                <option value="line">Line</option>
                <option value="2AxisLine">Double Axis Line</option>
                <option value="bar">Bar</option>
                <option value="pie">Pie</option>
                <option value="doughnut">Doughnut</option>
                <option value="radar">Radar</option>
                <option value="bubble">Bubble</option>
                <option value="polarArea">PolarArea</option>
                <option value="scatter">Scatter</option>
            </select>
        </div>
        <div class="p-2 bd-highlight">
            <label>Choose X data:</label>
            <select id="XData" name="XData">
                <option value="none">None</option>
                @foreach (string infrastructure in Model.Infrastructure)
                {
                    <option value="@infrastructure">@infrastructure</option>
                }
            </select>
        </div>
        <div class="p-2 bd-highlight">
            <label>Choose Y data:</label>
            <select id="YData" name="YData">
                <option value="none">None</option>
                @foreach (string infrastructure in Model.Infrastructure)
                {
                    <option value="@infrastructure">@infrastructure</option>
                }
            </select>
        </div>
        <div class="p-2 bd-highlight">
            <label>Choose Z data:</label>
            <select id="ZData" name="ZData">
                <option value="none">None</option>
                @foreach (string infrastructure in Model.Infrastructure)
                {
                    <option value="@infrastructure">@infrastructure</option>
                }
            </select>
        </div>
        <div class="p-2 bd-highlight">
            <input type="submit" value="Refresh" class="btn btn-primary" />
        </div>
    </div>
</form>

@if (TempData["Error"] != null)
{
    <div class="text-danger">@TempData["Error"].ToString()</div>
    TempData["Error"] = null;
}
else if (Model.ChartType == "table")
{
    <table class="table table-bordered">
        <thead>
            <tr>
                @foreach (string heading in Model.Infrastructure)
                {
                    <th>
                        @heading
                    </th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (List<string> row in Model.Data)
            {
                <tr>
                    @foreach (string data in row)
                    {
                        <td>
                            @data
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else if (Model.ChartType == "2AxisLine")
{
    <div>
        <canvas id="2AxisChart"></canvas>
    </div>
    <script>
        const DoubleAxisCtx = document.getElementById('2AxisChart');

        let doubleAxisLabels = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.Data.Select(data=>data[Model.XData])))');
        let doubleAxisdata = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.Data.Select(data=>data[Model.YData])))');
        let doubleAxisSecondData = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.Data.Select(data=>data[Model.ZData])))');

        new Chart(DoubleAxisCtx, {
            type: 'line',
            data: {
                labels: doubleAxisLabels,
                datasets: [
                    {
                        label: '@Html.Raw(Model.Infrastructure[Model.YData])',
                        data: doubleAxisdata,
                        borderWidth: 2.5
                    },
                    {
                        label: '@Html.Raw(Model.Infrastructure[Model.ZData])',
                        data: doubleAxisSecondData,
                        borderWidth: 2.5
                    }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}
else
{
    <div>
        <canvas id="chart"></canvas>
    </div>
    <script>
        const ctx = document.getElementById('chart');

        let chartType = '@Html.Raw(Model.ChartType)';
        let labels = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.Data.Select(data=>data[Model.XData])))');
        let data = JSON.parse('@Html.Raw(JsonSerializer.Serialize(Model.Data.Select(data=>data[Model.YData])))');
        new Chart(ctx, {
            type: chartType,
            data: {
                labels: labels,
                datasets: [{
                    label: '@Html.Raw(Model.Infrastructure[Model.YData])',
                    data: data,
                    borderWidth: 2.5
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}
<div class="d-flex bd-highlight align-content-center flex-wrap">
    <div class="p-2 flex-grow-1 bd-highlight">
        <form asp-asp-controller="Dashboard" asp-action="SendData">
            <div class="d-flex justify-content-between align-items-center form-group">
                <input type="text" class="form-control" id="data" name="data">
                <input type="submit" value="Send Data" class="btn btn-primary" style="margin: 0px 0px 0px 25px" />
            </div>
        </form>
    </div>
    <div class="p-2 bd-highlight">
        <a asp-controller="Dashboard" type="button" class="btn btn-info" asp-action="PreviusPage" asp-route-data="@JsonSerializer.Serialize(Model)">
            <span class="material-icons">chevron_left</span>
        </a>
        <a asp-controller="Dashboard" type="button" class="btn btn-info" asp-action="NextPage" asp-route-data="@JsonSerializer.Serialize(Model)">
            <span class="material-icons">navigate_next</span>
        </a>
    </div>
</div>
